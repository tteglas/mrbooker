@using MRBooker.Data.Models.Entities;
@using MRBooker.Wrappers;

@model PaginatedList<Room>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.AntiForgeryToken()

<div class="container">
    <h3>List of rooms</h3>
    <p>
        <a asp-action="Create" class="btn btn-info btn-default">Create New</a>
    </p>
    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                Search: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
                <input type="submit" value="Search" class="btn btn-success btn-default" /> |
                <a asp-action="Index">Back to Full List</a>
            </p>
        </div>
    </form>
    @if (Model.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        <a asp-controller="Room" asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model.First().Name)</a>
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Description)
                    </th>
                    <th>
                        <a asp-controller="Room" asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">@Html.DisplayNameFor(model => model.First().AddedDate)</a>
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AddedDate)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <div class="delete-section" style="display: inline;">
                                <a class="delete-link" href="@Url.Action("Delete", new { id = item.Id })">Delete</a>
                                <div class="btn btn-danger btn-primary delete-confirm" style="display:none; padding: 1px 2px;" data-delete-id="@item.Id">Confirm Delete</div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";

        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-page="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @prevDisabled">
            Prev
        </a>
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-page="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @nextDisabled">
            Next
        </a>
    }
    else
    {
        <h2 class="text-danger">No Rooms available</h2>
    }
</div>

@section Scripts {
    @await Html.PartialAsync("_deleteScriptPartial");
}